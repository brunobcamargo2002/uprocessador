$date
  Mon Apr 15 23:34:20 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module ula_tb $end
$var reg 2 ! operation[1:0] $end
$var reg 16 " in_a[15:0] $end
$var reg 16 # in_b[15:0] $end
$var reg 16 $ saida[15:0] $end
$var reg 1 % is_zero $end
$scope module uut $end
$var reg 2 & operation[1:0] $end
$var reg 16 ' in_a[15:0] $end
$var reg 16 ( in_b[15:0] $end
$var reg 16 ) saida[15:0] $end
$var reg 1 * is_zero $end
$var reg 16 + result_adder[15:0] $end
$var reg 16 , result_subtracter[15:0] $end
$var reg 16 - result_multiplicator[15:0] $end
$var reg 16 . result_xor[15:0] $end
$scope module adder1 $end
$var reg 16 / in_a[15:0] $end
$var reg 16 0 in_b[15:0] $end
$var reg 16 1 result[15:0] $end
$upscope $end
$scope module subtracter1 $end
$var reg 16 2 in_a[15:0] $end
$var reg 16 3 in_b[15:0] $end
$var reg 16 4 result[15:0] $end
$upscope $end
$scope module multiplicator1 $end
$var reg 16 5 in_a[15:0] $end
$var reg 16 6 in_b[15:0] $end
$var reg 16 7 result[15:0] $end
$var reg 32 8 product[31:0] $end
$upscope $end
$scope module xor_op1 $end
$var reg 16 9 in_a[15:0] $end
$var reg 16 : in_b[15:0] $end
$var reg 16 ; result[15:0] $end
$var reg 16 < aux[15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUU !
b0000000000001000 "
b0000000000000100 #
b0000000000000000 $
U%
bUU &
b0000000000001000 '
b0000000000000100 (
b0000000000000000 )
U*
b0000000000001100 +
b0000000000000100 ,
b0000000000100000 -
b0000000000001100 .
b0000000000001000 /
b0000000000000100 0
b0000000000001100 1
b0000000000001000 2
b0000000000000100 3
b0000000000000100 4
b0000000000001000 5
b0000000000000100 6
b0000000000100000 7
b00000000000000000000000000100000 8
b0000000000001000 9
b0000000000000100 :
b0000000000001100 ;
bUUUUUUUUUUUUUUUU <
#50000000
b00 !
b0000000000001100 $
b00 &
b0000000000001100 )
#100000000
b01 !
b0000000000000100 $
b01 &
b0000000000000100 )
#150000000
b10 !
b0000000000100000 $
b10 &
b0000000000100000 )
#200000000
b11 !
b0000000000001100 $
b11 &
b0000000000001100 )
#250000000
